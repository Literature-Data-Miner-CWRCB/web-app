services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    command: redis-server --appendonly yes
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 256M
  web:
    build: 
      context: backend
      dockerfile: ./compose/dev/Dockerfile
    ports:
      - "8000:8000"
    command: ["/start.sh"]
    volumes:
      - ./backend:/app
    env_file: 
      - ./backend/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/health"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
    depends_on:
      - redis
    networks:
      - app-network

  celery-worker:
    build:
      context: backend
      dockerfile: ./compose/dev/Dockerfile
    command: ["/start-celery-worker.sh"]
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "celery", "-A", "core.workers.celery_main", "inspect", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: always
    networks:
      - app-network

  celery-beat:
    build:
      context: backend
      dockerfile: ./compose/dev/Dockerfile
    command: ["/start-celery-beat.sh"]
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: always
    networks:
      - app-network

  celery-flower:
    build:
      context: backend
      dockerfile: ./compose/dev/Dockerfile
    volumes:
      - ./backend:/app
    command: ["/start-celery-flower.sh"]
    ports:
      - "5555:5555"
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
      celery-worker:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 256M

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge